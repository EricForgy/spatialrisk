#' @examples
#' Groningen %>%
#'   filter(value > 1000) %>%
#'   concentration_risk(., value)
#'
#' @export
concentration_risk <- function(data, value, lon = lon, radius = 200)  {
data_sub <- select(data, value = !!enquo(value), lon = !!enquo(lon), lat)
data$concentration <- purrr::pmap_dbl(data_sub, function(value, lon, lat, ...) sum_in_circle(data_sub, value, lon = lon, lat = lat, radius))
#data$concentration <- ifelse(is.na(data$concentration), value, data$concentration)
#data[ order(data$concentration, decreasing = TRUE), ]
data
}
Groningen %>%
filter(amount > 1050) %>%
concentration_risk(., amount, radius = 10)
#' @importFrom dplyr "arrange"
#' @importFrom purrr "pmap_dbl"
#' @importFrom magrittr "%>%"
#'
#' @examples
#' Groningen %>%
#'   filter(value > 1000) %>%
#'   concentration_risk(., value)
#'
#' @export
concentration_risk <- function(data, value, lon = lon, radius = 200)  {
data_sub <- select(data, value = !!enquo(value), lon = !!enquo(lon), lat)
data$concentration <- purrr::pmap_dbl(data_sub, function(value, lon, lat, ...) sum_in_circle(data_sub, value, lon = lon, lat = lat, radius))
#data$concentration <- ifelse(is.na(data$concentration), value, data$concentration)
#data[ order(data$concentration, decreasing = TRUE), ]
data
}
Groningen %>%
filter(amount > 1050) %>%
concentration_risk(., value = amount, radius = 10)
#' @importFrom dplyr "arrange"
#' @importFrom purrr "pmap_dbl"
#' @importFrom magrittr "%>%"
#'
#' @examples
#' Groningen %>%
#'   filter(value > 1000) %>%
#'   concentration_risk(., value)
#'
#' @export
concentration_risk <- function(data, value, lon, radius = 200)  {
data_sub <- select(data, value = !!enquo(value), lon = !!enquo(lon), lat)
data$concentration <- purrr::pmap_dbl(data_sub, function(value, lon, lat, ...) sum_in_circle(data_sub, value, lon = lon, lat = lat, radius))
#data$concentration <- ifelse(is.na(data$concentration), value, data$concentration)
#data[ order(data$concentration, decreasing = TRUE), ]
data
}
Groningen %>%
filter(amount > 1050) %>%
concentration_risk(., value = amount, radius = 10)
#' @importFrom dplyr "arrange"
#' @importFrom purrr "pmap_dbl"
#' @importFrom magrittr "%>%"
#'
#' @examples
#' Groningen %>%
#'   filter(value > 1000) %>%
#'   concentration_risk(., value)
#'
#' @export
concentration_risk <- function(data, value, radius = 200)  {
data_sub <- select(data, value = !!enquo(value), lon, lat)
data$concentration <- purrr::pmap_dbl(data_sub, function(value, lon, lat, ...) sum_in_circle(data_sub, value, lon = lon, lat = lat, radius))
#data$concentration <- ifelse(is.na(data$concentration), value, data$concentration)
#data[ order(data$concentration, decreasing = TRUE), ]
data
}
Groningen %>%
filter(amount > 1050) %>%
concentration_risk(., value = amount, radius = 10)
#' @importFrom dplyr "arrange"
#' @importFrom purrr "pmap_dbl"
#' @importFrom magrittr "%>%"
#'
#' @examples
#' Groningen %>%
#'   filter(value > 1000) %>%
#'   concentration_risk(., value)
#'
#' @export
concentration_risk <- function(data, value, radius = 200)  {
data_sub <- select(data, value = !!enquo(value), lon, lat)
data$concentration <- purrr::pmap_dbl(data_sub, function(value, lon, lat, ...) sum_in_circle(data_sub, value, lon = lon, lat = lat, radius))
data$concentration <- ifelse(is.na(data$concentration), value, data$concentration)
data[ order(data$concentration, decreasing = TRUE), ]
}
Groningen %>%
filter(amount > 1050) %>%
concentration_risk(., amount, radius = 10)
document()
document()
Groningen
Groningen
load("~/Dropbox/Werk/AAV/Concentratierisico/spatialrisk/data/Groningen.rda")
devtools::use_data(Groningen)
devtools::use_data(Groningen, overwrite = TRUE)
devtools::use_data(Groningen, overwrite = TRUE)
document()
document()
document()
library(spatialrisk)
library(spatialrisk)
document()
document()
document()
?enquo
document()
devtools::use_package("rlang")
document()
#'
#' @return value
#' @importFrom dplyr "select"
#' @importFrom purrr "pmap_dbl"
#' @importFrom rlang "enquo"
#'
#' @examples
#' concentration_risk(Groningen[1:10, ], amount)
#'
#' @export
concentration_risk <- function(data, value, radius = 200)  {
#data_sub <- select(data, value = !!enquo(value), lon, lat)
data_sub[, c(!!enquo(value, lon, lat))]
data$concentration <- purrr::pmap_dbl(data_sub, function(value, lon, lat, ...) sum_in_circle(data_sub, value, lon = lon, lat = lat, radius))
data$concentration <- ifelse(is.na(data$concentration), value, data$concentration)
data[ order(data$concentration, decreasing = TRUE), ]
}
concentration_risk(Groningen[1:10, ], amount)
#'
#' @return value
#' @importFrom dplyr "select"
#' @importFrom purrr "pmap_dbl"
#' @importFrom rlang "enquo"
#'
#' @examples
#' concentration_risk(Groningen[1:10, ], amount)
#'
#' @export
concentration_risk <- function(data, value, radius = 200)  {
#data_sub <- select(data, value = !!enquo(value), lon, lat)
data_sub <- data[, c(!!enquo(value, lon, lat))]
data$concentration <- purrr::pmap_dbl(data_sub, function(value, lon, lat, ...) sum_in_circle(data_sub, value, lon = lon, lat = lat, radius))
data$concentration <- ifelse(is.na(data$concentration), value, data$concentration)
data[ order(data$concentration, decreasing = TRUE), ]
}
concentration_risk(Groningen[1:10, ], amount)
#'
#' @return value
#' @importFrom dplyr "select"
#' @importFrom purrr "pmap_dbl"
#' @importFrom rlang "enquo"
#'
#' @examples
#' concentration_risk(Groningen[1:10, ], amount)
#'
#' @export
concentration_risk <- function(data, value, radius = 200)  {
#value1 <- !!enquo(value)
#data_sub <- select(data, value = !!enquo(value), lon, lat)
data_sub <- data[, c(!!enquo(value), data$lon, data$lat)]
data$concentration <- purrr::pmap_dbl(data_sub, function(value, lon, lat, ...) sum_in_circle(data_sub, value, lon = lon, lat = lat, radius))
data$concentration <- ifelse(is.na(data$concentration), value, data$concentration)
data[ order(data$concentration, decreasing = TRUE), ]
}
concentration_risk(Groningen[1:10, ], amount)
#'
#' @return value
#' @importFrom dplyr "select"
#' @importFrom purrr "pmap_dbl"
#' @importFrom rlang "enquo"
#'
#' @examples
#' concentration_risk(Groningen[1:10, ], amount)
#'
#' @export
concentration_risk <- function(data, value, radius = 200)  {
value1 <- !!enquo(value)
#data_sub <- select(data, value = !!enquo(value), lon, lat)
data_sub <- data[, c(data$value1, data$lon, data$lat)]
data$concentration <- purrr::pmap_dbl(data_sub, function(value, lon, lat, ...) sum_in_circle(data_sub, value, lon = lon, lat = lat, radius))
data$concentration <- ifelse(is.na(data$concentration), value, data$concentration)
data[ order(data$concentration, decreasing = TRUE), ]
}
concentration_risk(Groningen[1:10, ], amount)
#'
#' @return value
#' @importFrom dplyr "select"
#' @importFrom purrr "pmap_dbl"
#' @importFrom rlang "enquo"
#'
#' @examples
#' concentration_risk(Groningen[1:10, ], amount)
#'
#' @export
concentration_risk <- function(data, value, radius = 200)  {
#value1 <- !!enquo(value)
#data_sub <- select(data, value = !!enquo(value), lon, lat)
data_sub <- data[, c(data$value, data$lon, data$lat)]
data$concentration <- purrr::pmap_dbl(data_sub, function(value, lon, lat, ...) sum_in_circle(data_sub, value, lon = lon, lat = lat, radius))
data$concentration <- ifelse(is.na(data$concentration), value, data$concentration)
data[ order(data$concentration, decreasing = TRUE), ]
}
concentration_risk(Groningen[1:10, ], amount)
#'
#' @return value
#' @importFrom dplyr "select"
#' @importFrom purrr "pmap_dbl"
#' @importFrom rlang "enquo"
#'
#' @examples
#' concentration_risk(Groningen[1:10, ], amount)
#'
#' @export
concentration_risk <- function(data, value, radius = 200)  {
#value1 <- !!enquo(value)
value1 <- deparse(substitute(value))
#data_sub <- select(data, value = !!enquo(value), lon, lat)
data_sub <- data[, c(value1, data$lon, data$lat)]
data$concentration <- purrr::pmap_dbl(data_sub, function(value, lon, lat, ...) sum_in_circle(data_sub, value, lon = lon, lat = lat, radius))
data$concentration <- ifelse(is.na(data$concentration), value, data$concentration)
data[ order(data$concentration, decreasing = TRUE), ]
}
concentration_risk(Groningen[1:10, ], amount)
#'
#' @return value
#' @importFrom dplyr "select"
#' @importFrom purrr "pmap_dbl"
#' @importFrom rlang "enquo"
#'
#' @examples
#' concentration_risk(Groningen[1:10, ], amount)
#'
#' @export
concentration_risk <- function(data, value, radius = 200)  {
data_sub <- select(data, value = !!enquo(value), lon, lat)
data$concentration <- purrr::pmap_dbl(data_sub, function(value, lon, lat, ...) sum_in_circle(data_sub, value, lon = lon, lat = lat, radius))
data$concentration <- ifelse(is.na(data$concentration), value, data$concentration)
data[ order(data$concentration, decreasing = TRUE), ]
}
concentration_risk(Groningen[1:10, ], amount)
concentration_risk(Groningen[1:10, ], amount, 10)
library(spatialrisk)
#'
#' @return value
#' @importFrom dplyr "select"
#' @importFrom purrr "pmap_dbl"
#' @importFrom rlang "enquo"
#'
#' @examples
#' concentration_risk(Groningen[1:10, ], amount, radius = 10)
#'
#' @export
concentration_risk <- function(data, value, radius = 200)  {
data_sub <- data.frame(value = !!enquo(value), lon = data$lon, lat = data$lat)
#data_sub <- select(data, value = !!enquo(value), lon, lat)
data$concentration <- purrr::pmap_dbl(data_sub, function(value, lon, lat, ...) sum_in_circle(data_sub, value, lon = lon, lat = lat, radius))
data$concentration <- ifelse(is.na(data$concentration), value, data$concentration)
data[ order(data$concentration, decreasing = TRUE), ]
}
concentration_risk(Groningen[1:10, ], amount, radius = 10)
#'
#' @return value
#' @importFrom dplyr "select"
#' @importFrom purrr "pmap_dbl"
#' @importFrom rlang "enquo"
#'
#' @examples
#' concentration_risk(Groningen[1:10, ], amount, radius = 10)
#'
#' @export
concentration_risk <- function(data, value, radius = 200)  {
data_sub <- select(data, value = !!enquo(value), .$lon, .$lat)
data$concentration <- purrr::pmap_dbl(data_sub, function(value, lon, lat, ...) sum_in_circle(data_sub, value, lon = lon, lat = lat, radius))
data$concentration <- ifelse(is.na(data$concentration), value, data$concentration)
data[ order(data$concentration, decreasing = TRUE), ]
}
#'
#' @return value
#' @importFrom dplyr "select"
#' @importFrom purrr "pmap_dbl"
#' @importFrom rlang "enquo"
#'
#' @examples
#' concentration_risk(Groningen[1:10, ], amount, radius = 10)
#'
#' @export
concentration_risk <- function(data, value, radius = 200)  {
data_sub <- select(data, value = !!enquo(value), .$lon, .$lat)
data$concentration <- purrr::pmap_dbl(data_sub, function(value, lon, lat, ...) sum_in_circle(data_sub, value, lon = lon, lat = lat, radius))
data$concentration <- ifelse(is.na(data$concentration), value, data$concentration)
data[ order(data$concentration, decreasing = TRUE), ]
}
concentration_risk(Groningen[1:10, ], amount, radius = 10)
#'
#' @return value
#' @importFrom dplyr "select"
#' @importFrom purrr "pmap_dbl"
#' @importFrom rlang "enquo"
#'
#' @examples
#' concentration_risk(Groningen[1:10, ], amount, radius = 10)
#'
#' @export
concentration_risk <- function(data, value, radius = 200)  {
data_sub <- select(data, value = !!enquo(value), data$lon, data$lat)
data$concentration <- purrr::pmap_dbl(data_sub, function(value, lon, lat, ...) sum_in_circle(data_sub, value, lon = lon, lat = lat, radius))
data$concentration <- ifelse(is.na(data$concentration), value, data$concentration)
data[ order(data$concentration, decreasing = TRUE), ]
}
concentration_risk(Groningen[1:10, ], amount, radius = 10)
concentration_risk <- function(data, value, radius = 200)  {
data_sub <- select(data, value = !!enquo(value))
data_sub$lon <- data$lon
data_sub$lat <- data$lat
data$concentration <- purrr::pmap_dbl(data_sub, function(value, lon, lat, ...) sum_in_circle(data_sub, value, lon = lon, lat = lat, radius))
data$concentration <- ifelse(is.na(data$concentration), value, data$concentration)
data[ order(data$concentration, decreasing = TRUE), ]
}
concentration_risk(Groningen[1:10, ], amount, radius = 10)
document()
library(spatialrisk)
library(spatialrisk)
block_around_coord(lon = 6.520386, lat = 53.24007, radius = 200)
Groningen
concentration_risk(data = Groningen, value = amount)
library(dplyr)
concentration_risk(data = Groningen, value = amount)
geosphere::distHaversine
geosphere::destPoint
haversine <- function(lat_from, lon_from, lat_to, lon_to){
radians <- pi / 180
lat_to <- lat_to * radians
lat_from <- lat_from * radians
lon_to <- lon_to * radians
lon_from <- lon_from * radians
dLat <- (lat_to - lat_from)
dLon <- (lon_to - lon_from)
a <- (sin(dLat / 2) ^ 2) + (cos(lat_from) * cos(lat_to)) * (sin(dLon / 2) ^ 2)
return(2 * atan2(sqrt(a), sqrt(1 - a)) * 6378137)
}
block_around_point <- function(lon_center, lat_center, radius = 200){
north <- 0
east <- 90
south <- 180
west <- 270
return(geosphere::destPoint(c(lon_center, lat_center), c(north, east, south, west), radius))
}
points_in_circle <- function(data, lon_center, lat_center, lon = lon, lat = lat, radius = 200){
lon <- deparse(substitute(lon))
lat <- deparse(substitute(lat))
data <- data.table(data)
block <- block_around_point(lon_center, lat_center, radius)
tryCatch({
data_in_block <- data[lon > block[4,1] & lon < block[2,1] & lat > block[3,2] & lat < block[1,2]]
data_in_circle <- data_in_block[, distance := haversine(lat_center, lon_center, lat, lon),
by = 1:nrow(data_in_block)][distance < radius][order(distance)]
return(data_in_circle)},
error = function(e) NA
)
}
sum_in_circle <- function(data, value, lon_center, lat_center, lon = lon, lat = lat, radius = 200){
value <- deparse(substitute(value))
lon <- deparse(substitute(lon))
lat <- deparse(substitute(lat))
data <- data.table(data)
summation <- points_in_circle(data, lon_center, lat_center, lon, lat, radius)
tryCatch(
sum(summation[, value, with = FALSE][[1]]),
error = function(e) NA
)
}
sum_in_circle(spatialrisk::Groningen, amount, 6.520386, 53.24007)
?data.table
?data.table::data.table()
df <- data.frame(col1 = a:d)
df <- data.frame(col1 = letters(a:d))
df <- data.frame(col1 = 1:10, col2 - 2:11)
df <- data.frame(col1 = 1:10, col2 = 2:11)
df
devtools::document()
library(spatialrisk)
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
concentration <- function(data, value, radius = 200){
dt <- data.table(data)
value2 <- quote(value)
concentration <- dt[, concentration := sum_in_circle(dt, value = eval(value2), lon_center = lon, lat_center = lat, radius = radius),
by = 1:nrow(dt)][order(-concentration)]
return(concentration)
}
concentration(spatialrisk::Groningen[1:200,], amount, radius = 100)
library(data.table)
concentration <- function(data, value, radius = 200){
dt <- data.table(data)
value2 <- quote(value)
concentration <- dt[, concentration := sum_in_circle(dt, value = eval(value2), lon_center = lon, lat_center = lat, radius = radius),
by = 1:nrow(dt)][order(-concentration)]
return(concentration)
}
concentration(spatialrisk::Groningen[1:200,], amount, radius = 100)
concentration <- function(data, value, radius = 200){
dt <- data.table(data)
value2 <- deparse(substitute(value))
concentration <- dt[, concentration := sum_in_circle(dt, value = as.numeric(value2), lon_center = lon, lat_center = lat, radius = radius),
by = 1:nrow(dt)][order(-concentration)]
return(concentration)
}
concentration(spatialrisk::Groningen[1:200,], amount, radius = 100)
concentration(spatialrisk::Groningen[1:200,], amount, radius = 100)
concentration <- function(data, value, radius = 200){
dt <- data.table(data)
concentration <- dt[, concentration := sum_in_circle(dt, value = amount, lon_center = lon, lat_center = lat, radius = radius),
by = 1:nrow(dt)][order(-concentration)]
return(concentration)
}
concentration(spatialrisk::Groningen[1:200,], amount, radius = 100)
library(spatialrisk)
?sum_in_circle
?points_in_circle
library(spatialrisk)
concentration <- function(data, value, radius = 200){
dt <- data.table(data)
concentration <- dt[, concentration := sum_in_circle(dt, value = amount, lon_center = lon, lat_center = lat, radius = radius),
by = 1:nrow(dt)][order(-concentration)]
return(concentration)
}
concentration(spatialrisk::Groningen[1:200,], amount, radius = 100)
concentration <- function(data, value, radius = 200){
dt <- data.table(data)
concentration <- dt[, concentration := sum_in_circle(dt, value = get(value), lon_center = lon, lat_center = lat, radius = radius),
by = 1:nrow(dt)][order(-concentration)]
return(concentration)
}
concentration(spatialrisk::Groningen[1:200,], 'amount', radius = 100)
concentration <- function(data, value1, radius = 200){
dt <- data.table(data)
concentration <- dt[, concentration := sum_in_circle(dt, value1 = get(value1), lon_center = lon, lat_center = lat, radius = radius),
by = 1:nrow(dt)][order(-concentration)]
return(concentration)
}
concentration(spatialrisk::Groningen[1:200,], 'amount', radius = 100)
concentration <- function(data, value1, radius = 200){
dt <- data.table(data)
concentration <- dt[, concentration := sum_in_circle(dt, value = get(value1), lon_center = lon, lat_center = lat, radius = radius),
by = 1:nrow(dt)][order(-concentration)]
return(concentration)
}
concentration(spatialrisk::Groningen[1:200,], 'amount', radius = 100)
concentration <- function(data, value1, radius = 200){
dt <- data.table(data)
value1 <- deparse(substitute(value1))
setnames(dt, value1, "value")
concentration <- dt[, concentration := sum_in_circle(dt, value = value, lon_center = lon, lat_center = lat, radius = radius),
by = 1:nrow(dt)][order(-concentration)]
return(concentration)
}
concentration(spatialrisk::Groningen[1:200,], amount, radius = 100)
concentration <- function(data, value1, radius = 200){
dt <- data.table(data)
value1 <- deparse(substitute(value1))
setnames(dt, value1, "value")
concentration <- dt[, concentration := sum_in_circle(dt, value = value, lon_center = lon, lat_center = lat, radius = radius),
by = 1:nrow(dt)][order(-concentration)]
return(concentration)
}
concentration(spatialrisk::Groningen[1:200,], amount, radius = 100)
concentration(spatialrisk::Groningen[1:200,], amount, radius = 1000)
concentration <- function(data, value, radius = 200){
dt <- data.table(data)
value <- deparse(substitute(value))
setnames(dt, value, "value")
concentration <- dt[, concentration := sum_in_circle(dt, value = value, lon_center = lon, lat_center = lat, radius = radius),
by = 1:nrow(dt)][order(-concentration)]
return(concentration)
}
concentration(spatialrisk::Groningen[1:200,], amount, radius = 1000)
concentration(spatialrisk::Groningen[1:200,], number, radius = 1000)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
points_in_circle1 <- function(data, lon_center, lat_center, lon = lon, lat = lat, radius = 200){
lon <- deparse(substitute(lon))
lat <- deparse(substitute(lat))
data <- data.table(data)
block <- block_around_point(lon_center, lat_center, radius)
tryCatch({
#data_in_block <- data[lon > block[4,1] & lon < block[2,1] & lat > block[3,2] & lat < block[1,2]]
data_in_block <- subset(data, lon > block[4,1] & lon < block[2,1] & lat > block[3,2] & lat < block[1,2])
data_in_circle <- data_in_block[, distance := haversine(lat_center, lon_center, lat, lon),
by = 1:nrow(data_in_block)][distance < radius][order(distance)]
return(data_in_circle)},
error = function(e) NA
)
}
points_in_circle1(spatialrisk::Groningen, 6.520386, 53.24007, 200)
library(spatialrisk)
points_in_circle1(spatialrisk::Groningen, 6.520386, 53.24007, 200)
